/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "config",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "call_m08sKaj",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "exec_606BaXt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608034606f57601f61054f38819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b0319169190911790556040516104c790816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610114575b36156101125760015f5c036100e95760015c6bffffffffffffffffffffffff81146100e95760051b81013501803590825190602092839181830190843782010183528051810183828483019203126100e957828201519067ffffffffffffffff918281116100e95783019481603f870112156100e957848601519561009c610097886103b8565b610326565b96828789838152019160051b830101918483116100e957838101915b8383106100ed57505050508301519182116100e957836100dd926100e394010161040b565b92610455565b81519101f35b5f80fd5b82518781116100e95789916101078888859487010161040b565b8152019201916100b8565b005b5f3560e01c80156102b857806001146102095780638da5cb5b146101e2578063a9059cbb146101835763f2fde38b036100105760203660031901126100e95761015b6103d0565b5f54906001600160a01b039081831633036100e9576001600160a01b03199092169116175f55005b826003193601126100e9576101966103d0565b806024353033036100e9575f918291829182916001600160a01b038716156101da575b478181109082180218905af16101cd6103e6565b90156101d557005b610447565b4191506101b9565b82346100e9575f3660031901126100e9575f5490516001600160a01b039091168152602090f35b506020806003193601126100e957813567ffffffffffffffff928382116100e957366023830112156100e957810135602490610247610097826103b8565b946024602087848152019260051b850101933685116100e95760248101925b858410610292575f5488906001600160a01b031633036100e95761028d9060015f5d610455565b5f805d005b83358381116100e95787916102ad839288369187010161037c565b815201930192610266565b5060603660031901126100e9578035906044359067ffffffffffffffff82116100e9576102e79136910161037c565b3033036100e9575f809160015c938060a01c60015d81519160200190602435906001600160a01b03165af161031a6103e6565b90156101d5575060015d005b6040519190601f01601f1916820167ffffffffffffffff81118382101761034c57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161034c57601f01601f191660200190565b81601f820112156100e95780359061039661009783610360565b92828452602083830101116100e957815f926020809301838601378301015290565b67ffffffffffffffff811161034c5760051b60200190565b600435906001600160a01b03821682036100e957565b3d15610406573d906103fa61009783610360565b9182523d5f602084013e565b606090565b81601f820112156100e95780519061042561009783610360565b92828452602083830101116100e957815f9260208093018386015e8301015290565b80519081156100e957602001fd5b5f5b815181101561048d575f806020808460051b86010151908151910182305af161047e6103e6565b90156101d55750600101610457565b505056fea26469706673582212207c02be93ba952bdf6b53c3f4f81e3b6bd26d62d8286d57ffd0a5ad6ea27aa01a64736f6c63430008190033";

type ExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Executor__factory extends ContractFactory {
  constructor(...args: ExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      Executor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Executor__factory {
    return super.connect(runner) as Executor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new Interface(_abi) as ExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Executor {
    return new Contract(address, _abi, runner) as unknown as Executor;
  }
}
