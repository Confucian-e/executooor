/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "context",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "call_g0oyU7o",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "exec_606BaXt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608034606f57601f61054238819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b0319169190911790556040516104ba90816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610117575b3615610115575f5c6001600160a01b03811633036100ec576c1fffffffffffffffffffffffe090609b1c1681013501803590825190602092839181830190843782010183528051810183828483019203126100ec57828201519067ffffffffffffffff918281116100ec5783019481603f870112156100ec57848601519561009f61009a886103c1565b61032f565b96828789838152019160051b830101918483116100ec57838101915b8383106100f057505050508301519182116100ec57836100e0926100e69401016103fe565b92610448565b81519101f35b5f80fd5b82518781116100ec57899161010a888885948701016103fe565b8152019201916100bb565b005b5f3560e01c80156102b2578060011461020c5780638da5cb5b146101e5578063a9059cbb146101865763f2fde38b036100105760203660031901126100ec5761015e610319565b5f54906001600160a01b039081831633036100ec576001600160a01b03199092169116175f55005b826003193601126100ec57610199610319565b806024353033036100ec575f918291829182916001600160a01b038716156101dd575b478181109082180218905af16101d06103d9565b90156101d857005b61043a565b4191506101bc565b82346100ec575f3660031901126100ec575f5490516001600160a01b039091168152602090f35b506020806003193601126100ec57813567ffffffffffffffff928382116100ec57366023830112156100ec5781013560249061024a61009a826103c1565b946024602087848152019260051b850101933685116100ec5760248101925b85841061028c575f5488906001600160a01b031633036100ec5761011590610448565b83358381116100ec5787916102a78392883691870101610385565b815201930192610269565b5060803660031901126100ec576102c7610319565b906064359067ffffffffffffffff82116100ec576102e791369101610385565b3033036100ec575f8091815c93604435835d60208251920190602435905af161030e6103d9565b90156101d857505f5d005b600435906001600160a01b03821682036100ec57565b6040519190601f01601f1916820167ffffffffffffffff81118382101761035557604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161035557601f01601f191660200190565b81601f820112156100ec5780359061039f61009a83610369565b92828452602083830101116100ec57815f926020809301838601378301015290565b67ffffffffffffffff81116103555760051b60200190565b3d156103f9573d906103ed61009a83610369565b9182523d5f602084013e565b606090565b81601f820112156100ec5780519061041861009a83610369565b92828452602083830101116100ec57815f9260208093018386015e8301015290565b80519081156100ec57602001fd5b5f5b8151811015610480575f806020808460051b86010151908151910182305af16104716103d9565b90156101d8575060010161044a565b505056fea2646970667358221220a8d7c492949a39075566b70ea14cb84e4a664afa6f509bdcd78ce97f2fca8cf164736f6c63430008190033";

type ExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Executor__factory extends ContractFactory {
  constructor(...args: ExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      Executor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Executor__factory {
    return super.connect(runner) as Executor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new Interface(_abi) as ExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Executor {
    return new Contract(address, _abi, runner) as unknown as Executor;
  }
}
